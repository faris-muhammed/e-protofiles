syntax = "proto3";

option go_package = "github.com/faris-muhammed/e-protofiles/product";

package product;

service ProductService {
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
    rpc GetProduct(GetProductRequest) returns (GetProductResponse);
    rpc UpdateProduct(UpdateProductRequest) returns (UpdateProductResponse);
    rpc ModifyProductStatus (ModifyProductStatusRequest) returns (ModifyProductStatusResponse);
    rpc ListProductsSeller(ListProductsSellerRequest) returns (ListProductsSellerResponse);
    rpc ListProducts (ListProductsRequest) returns (ListProductsResponse);
}

message Product {
    uint64 id = 1;               // Unique identifier for the product
    string name = 2;            // Name of the product
    double price = 3;           // Price of the product
    uint64 stock = 4;
    uint64 category_id = 5;     // Category of the product
    uint64 seller_id = 6;        // ID of the seller who owns the product
    bool is_deleted = 7;        // Soft delete flag
    string created_at = 8;      // Timestamp when the product was created
    string updated_at = 9;      // Timestamp when the product was last updated
}

message CreateProductRequest {
    string name = 1;
    double price = 2;
    uint64 stock = 3 ;
    uint64 category_id = 4;
    uint64 seller_id = 5;      
}

message CreateProductResponse {
    string message = 1;
    Product product = 2;
}

message GetProductRequest {
    uint64 product_id = 1;
}

message GetProductResponse {
    Product product = 1;
}

message UpdateProductRequest {
    uint64 id = 1;             // ID of the product to update
    string name = 2;          
    double price = 3;         
    uint64 stock = 4;          
    uint64 category_id = 5;     
}

message UpdateProductResponse {
    string message = 1;
    Product product = 2;
}

message ModifyProductStatusRequest {
  uint64 product_id = 1;
  string action = 2; 
}

message ModifyProductStatusResponse {
  string message = 1;
}

message ListProductsSellerRequest {
    uint64 seller_id = 1;  
}

message ListProductsSellerResponse {
    repeated Product products = 1;
}
message ListProductsRequest {}

message ListProductsResponse {
    string message = 1;
    repeated Product products = 2;
}